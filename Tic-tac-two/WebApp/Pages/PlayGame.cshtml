@page
@using GameBrain
@using Microsoft.EntityFrameworkCore
@model WebApp.Pages.PlayGame

@if (Model.Winner != EGamePiece.Empty)
{
    <div>
        Winner is @Model.Winner
    </div>
}

Next move by: @Model.TicTacTwoBrain.NextMoveBy

@if (!string.IsNullOrWhiteSpace(Model.Error))
{
    <div class="alert alert-danger" role="alert">
        @Model.Error
    </div>
}

@Model.TicTacTwoBrain.PlayerX: has @Model.TicTacTwoBrain.PlayerXPieces pieces left <br/>
@Model.TicTacTwoBrain.PlayerO: has @Model.TicTacTwoBrain.PlayerOPieces pieces left <br/>

Choose one of the following options:
@foreach (var choice in Model.Choices)
{
    <div>@choice</div>
}

<table class="" border="1">
    @for (var y = 0; y < Model.TicTacTwoBrain.DimY; y++)
    {
        <tr>
            @for (var x = 0; x < Model.TicTacTwoBrain.DimX; x++)
            {
                <td>
                    @if (Model.TicTacTwoBrain.GameBoard[x][y] == EGamePiece.Empty)
                    {
                        <a asp-route-x="@x" asp-route-y="@y" asp-route-GameName="@Model.GameName" asp-route-Piece="@Model.Piece">[<b></b>]</a>
                    }
                    else
                    {
                        @Model.TicTacTwoBrain.GameBoard[x][y]
                    }
                </td>
            }
        </tr>
    }
</table>