@page
@using GameBrain
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model WebApp.Pages.AiLoop

@{
    var player = Model.TicTacTwoBrain.NextMoveBy == EGamePiece.X ? Model.TicTacTwoBrain.PlayerX : Model.TicTacTwoBrain.PlayerO;
}

<div class="container">
    <div class="row">
        <div class="col-2"></div>
        <div class="col-7 text-center"><h1 class="display-4">TIC-TAC-TWO</h1></div>
        <div class="col-3 text-center">
            <button class="btn passwords" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                @Model.GameName
            </button>
            <div class="collapse" id="collapseExample">

                <div class="card card-body">
                    <div>
                        Password: @Model.Password
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container text-center">
    <div class="row">
        <div class="col-2"></div>
        <div class="col-7 text-center">
            <div>
                @if (Model.Winner != null)
                {
                    @if (Model.Winner != EGamePiece.Empty)
                    {
                        var winPlayer = Model.Winner == EGamePiece.X ? Model.TicTacTwoBrain.PlayerX : Model.TicTacTwoBrain.PlayerO;
                        <div class="info">Winner is @winPlayer!</div>
                    }
                    else
                    {
                        <div class="info">It it a tie!</div>
                    }
                }
                else
                {
                    <div class="info">Next move by: @player</div>
                }  
            </div>
            <div class="my-4 d-flex align-items-center justify-content-center">
                <table class="board">
                    @for (var y = 0; y < Model.TicTacTwoBrain.DimY; y++)
                    {
                        <tr>
                            @for (var x = 0; x < Model.TicTacTwoBrain.DimX; x++)
                            {
                                var isGridCell = y >= Model.TicTacTwoBrain.GridCoordinates[1] &&
                                                 y <= Model.TicTacTwoBrain.GridCoordinates[1] + Model.TicTacTwoBrain.GridSize - 1 &&
                                                 x >= Model.TicTacTwoBrain.GridCoordinates[0] &&
                                                 x <= Model.TicTacTwoBrain.GridCoordinates[0] + Model.TicTacTwoBrain.GridSize - 1;
                                <td class="@(isGridCell ? "grid-cell" : "")">
                                    @if (Model.TicTacTwoBrain.GameBoard[x][y] == EGamePiece.Empty)
                                    {
                                        <button type="submit" class="@(isGridCell ? "btn grid" : "btn btn-outline-dark")" disabled>&nbsp;&nbsp;&nbsp;</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="@(isGridCell ? "btn grid" : "btn btn-outline-dark")" disabled>@Model.TicTacTwoBrain.GameBoard[x][y]</button>
                                    }
                                </td>
                            }
                        </tr>
                    }
                </table>
            </div>
            <div class="my-1">
                @Model.TicTacTwoBrain.PlayerX: has @Model.TicTacTwoBrain.PlayerXPieces pieces left
            </div>
            <div class="my-1">
                @Model.TicTacTwoBrain.PlayerO: has @Model.TicTacTwoBrain.PlayerOPieces pieces left
            </div>
        </div>
        <div class="col-3 text-start">
            @if (Model.Winner == null)
            {
                <div class="my-2">
                    Player @player options:
                    <ul>
                        @foreach (var choice in Model.Choices)
                        {
                            <div class="my-1"><li>@choice</li></div>
                        }
                    </ul>
                </div>
            }
            else
            {
                <div class="my-4 text-center">
                    <form method="post">
                        <input type="hidden" name="action" value="reset"/>
                        <input type="hidden" name="GameName" value="@Model.GameName"/>
                        <input type="hidden" name="Piece" value="@Model.Piece"/>
                        <button class="btn reset">Reset</button>
                    </form>
                </div>
            }
            @if (Model.Winner == null)
            {
                <div class="my-4 text-center">
                    <form method="post">
                        <input type="hidden" name="action" value="move"/>
                        <input type="hidden" name="GameName" value="@Model.GameName"/>
                        <button class="btn custom">Next move</button>
                    </form>
                </div>
            }
            <div class="my-4 text-center">
                <form method="post">
                    <input type="hidden" name="action" value="exit"/>
                    <input type="hidden" name="GameName" value="@Model.GameName"/>
                    <input type="hidden" name="Piece" value="@Model.Piece"/>
                    <button class="btn exit">Exit</button>
                </form>
            </div>
        </div>
        </div>
</div>
